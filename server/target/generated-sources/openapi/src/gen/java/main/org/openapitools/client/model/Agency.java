/*
 * GTFS Transit API
 * A sample REST API for accessing public transit data from a GTFS feed. This API allows users to query for agencies, routes, stops, and schedule information.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@transit-example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A transit agency from the &#x60;agency.txt&#x60; GTFS file.
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-30T12:08:48.652081200+02:00[Europe/Skopje]", comments = "Generator version: 7.14.0")
public class Agency {
  public static final String SERIALIZED_NAME_AGENCY_ID = "agency_id";
  @SerializedName(SERIALIZED_NAME_AGENCY_ID)
  @jakarta.annotation.Nullable
  private String agencyId;

  public static final String SERIALIZED_NAME_AGENCY_NAME = "agency_name";
  @SerializedName(SERIALIZED_NAME_AGENCY_NAME)
  @jakarta.annotation.Nullable
  private String agencyName;

  public static final String SERIALIZED_NAME_AGENCY_URL = "agency_url";
  @SerializedName(SERIALIZED_NAME_AGENCY_URL)
  @jakarta.annotation.Nullable
  private URI agencyUrl;

  public static final String SERIALIZED_NAME_AGENCY_TIMEZONE = "agency_timezone";
  @SerializedName(SERIALIZED_NAME_AGENCY_TIMEZONE)
  @jakarta.annotation.Nullable
  private String agencyTimezone;

  public Agency() {
  }

  public Agency agencyId(@jakarta.annotation.Nullable String agencyId) {
    this.agencyId = agencyId;
    return this;
  }

  /**
   * A unique identifier for the transit agency.
   * @return agencyId
   */
  @jakarta.annotation.Nullable
  public String getAgencyId() {
    return agencyId;
  }

  public void setAgencyId(@jakarta.annotation.Nullable String agencyId) {
    this.agencyId = agencyId;
  }


  public Agency agencyName(@jakarta.annotation.Nullable String agencyName) {
    this.agencyName = agencyName;
    return this;
  }

  /**
   * The full name of the transit agency.
   * @return agencyName
   */
  @jakarta.annotation.Nullable
  public String getAgencyName() {
    return agencyName;
  }

  public void setAgencyName(@jakarta.annotation.Nullable String agencyName) {
    this.agencyName = agencyName;
  }


  public Agency agencyUrl(@jakarta.annotation.Nullable URI agencyUrl) {
    this.agencyUrl = agencyUrl;
    return this;
  }

  /**
   * The URL of the transit agency.
   * @return agencyUrl
   */
  @jakarta.annotation.Nullable
  public URI getAgencyUrl() {
    return agencyUrl;
  }

  public void setAgencyUrl(@jakarta.annotation.Nullable URI agencyUrl) {
    this.agencyUrl = agencyUrl;
  }


  public Agency agencyTimezone(@jakarta.annotation.Nullable String agencyTimezone) {
    this.agencyTimezone = agencyTimezone;
    return this;
  }

  /**
   * The timezone where the agency is located.
   * @return agencyTimezone
   */
  @jakarta.annotation.Nullable
  public String getAgencyTimezone() {
    return agencyTimezone;
  }

  public void setAgencyTimezone(@jakarta.annotation.Nullable String agencyTimezone) {
    this.agencyTimezone = agencyTimezone;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Agency agency = (Agency) o;
    return Objects.equals(this.agencyId, agency.agencyId) &&
        Objects.equals(this.agencyName, agency.agencyName) &&
        Objects.equals(this.agencyUrl, agency.agencyUrl) &&
        Objects.equals(this.agencyTimezone, agency.agencyTimezone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agencyId, agencyName, agencyUrl, agencyTimezone);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Agency {\n");
    sb.append("    agencyId: ").append(toIndentedString(agencyId)).append("\n");
    sb.append("    agencyName: ").append(toIndentedString(agencyName)).append("\n");
    sb.append("    agencyUrl: ").append(toIndentedString(agencyUrl)).append("\n");
    sb.append("    agencyTimezone: ").append(toIndentedString(agencyTimezone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("agency_id", "agency_name", "agency_url", "agency_timezone"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Agency
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Agency.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Agency is not found in the empty JSON string", Agency.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Agency.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Agency` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("agency_id") != null && !jsonObj.get("agency_id").isJsonNull()) && !jsonObj.get("agency_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `agency_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("agency_id").toString()));
      }
      if ((jsonObj.get("agency_name") != null && !jsonObj.get("agency_name").isJsonNull()) && !jsonObj.get("agency_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `agency_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("agency_name").toString()));
      }
      if ((jsonObj.get("agency_url") != null && !jsonObj.get("agency_url").isJsonNull()) && !jsonObj.get("agency_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `agency_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("agency_url").toString()));
      }
      if ((jsonObj.get("agency_timezone") != null && !jsonObj.get("agency_timezone").isJsonNull()) && !jsonObj.get("agency_timezone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `agency_timezone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("agency_timezone").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Agency.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Agency' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Agency> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Agency.class));

       return (TypeAdapter<T>) new TypeAdapter<Agency>() {
           @Override
           public void write(JsonWriter out, Agency value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Agency read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Agency given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Agency
   * @throws IOException if the JSON string is invalid with respect to Agency
   */
  public static Agency fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Agency.class);
  }

  /**
   * Convert an instance of Agency to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

